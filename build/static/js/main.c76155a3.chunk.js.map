{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["navBar","totalCounters","console","log","className","href","Counter","prevProps","prevState","counter","value","this","props","children","getBadgeClasses","formatCount","onClick","onIncrement","onDelete","id","classes","count","Component","Counters","onReset","counters","map","App","state","handleIncrement","index","indexOf","setState","handleReset","c","handleDelete","counterId","filter","Fragment","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+PAgBeA,EAXA,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEb,OADAC,QAAQC,IAAI,sBACJ,qBAAKC,UAAU,+BAAf,SACR,oBAAGA,UAAU,eAAeC,KAAK,IAAjC,oBACW,sBAAMD,UAAU,mCAAhB,SACFH,UCkDEK,G,8KAxDX,SAAmBC,EAAWC,GAC1BN,QAAQC,IAAI,YAAaI,GACzBL,QAAQC,IAAI,YAAaK,GACtBD,EAAUE,QAAQC,MAAUC,KAAKC,MAAMH,QAAQC,Q,kCAMtD,WACIR,QAAQC,IAAI,sB,oBAchB,WAAU,IAAD,OAIL,OADAD,QAAQC,IAAI,qBAER,gCACCQ,KAAKC,MAAMC,SACZ,sBAAMT,UAAWO,KAAKG,kBAAtB,SAA0CH,KAAKI,gBAC/C,wBACAC,QAAS,WAAM,EAAKJ,MAAMK,YAAY,EAAKL,MAAMH,UAEjDL,UAAU,2BAHV,uBAMI,wBAAQY,QAAS,kBAAM,EAAKJ,MAAMM,SAAS,EAAKN,MAAMH,QAAQU,KAAKf,UAAU,4BAA7E,yB,6BAMZ,WACI,IAAIgB,EAAU,mBAEd,OADAA,GAAyC,IAA7BT,KAAKC,MAAMH,QAAQC,MAAe,UAAY,Y,yBAI9D,WACI,IAAcW,EAASV,KAAKC,MAAMH,QAA3BC,MACP,OAAgB,IAATW,EAAY,OAAQA,M,GAtDbC,cC4BPC,E,4JAxBX,WACI,MAAoDZ,KAAKC,MAAlDY,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,SAAUP,EAA1B,EAA0BA,SAAUD,EAApC,EAAoCA,YAGpC,OAFAf,QAAQC,IAAI,uBAGZ,gCACI,wBACAa,QAASQ,EACTpB,UAAU,6BAFV,mBAKHqB,EAASC,KAAI,SAAAjB,GAAO,OACrB,cAAC,EAAD,CAEAS,SAAUA,EACVD,YAAaA,EACbR,QAASA,GAHJA,EAAQU,c,GAfGG,aC6DTK,E,kDA/Cb,WAAYf,GAAO,IAAD,8BAChB,cAAMA,IAVRgB,MAAQ,CACNH,SAAS,CACL,CAACN,GAAI,EAAGT,MAAO,GACf,CAACS,GAAI,EAAGT,MAAO,GACf,CAACS,GAAI,EAAGT,MAAO,GACf,CAACS,GAAI,EAAGT,MAAO,KAIH,EASlBmB,gBAAkB,SAAApB,GAClB,IAAMgB,EAAQ,YAAO,EAAKG,MAAMH,UAC5BK,EAAML,EAASM,QAAQtB,GAC3BgB,EAASK,GAAT,eAAqBrB,GACrBgB,EAASK,GAAOpB,QAEhB,EAAKsB,SAAS,CAACP,cAfG,EAkBlBQ,YAAY,WACZ,IAAMR,EAAU,EAAKG,MAAMH,SAASC,KAAI,SAAAQ,GAEpC,OADAA,EAAExB,MAAO,EACFwB,KAEX,EAAKF,SAAS,CAACP,cAvBG,EA0BlBU,aAAe,SAAAC,GACX,IAAMX,EAAU,EAAKG,MAAMH,SAASY,QAAO,SAAAH,GAAC,OAAIA,EAAEf,KAAOiB,KACzD,EAAKJ,SAAS,CAACP,cA1BjBvB,QAAQC,IAAI,qBAFI,E,qDAKlB,WAEED,QAAQC,IAAI,kB,oBAuBd,WAEE,OADAD,QAAQC,IAAI,kBAEV,eAAC,IAAMmC,SAAP,WACA,cAAC,EAAD,CAAQrC,cAAeU,KAAKiB,MAAMH,SAASY,QAAO,SAAAH,GAAC,OAAEA,EAAExB,MAAM,KAAG6B,SAChE,sBAAMnC,UAAU,YAAhB,SACE,cAAC,EAAD,CACAqB,SAAUd,KAAKiB,MAAMH,SACrBD,QAASb,KAAKsB,YACdhB,YAAaN,KAAKkB,gBAClBX,SAAUP,KAAKwB,wB,GAnDLb,aCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAChDZ,M","file":"static/js/main.c76155a3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n//stateless functional component\r\n//to use props we need to pass props as an arguement\r\n\r\nconst navBar = ({totalCounters }) =>{\r\n    console.log('NavBar -  Rendered');\r\n    return (<nav className=\"navbar navbar-light bg-light\">\r\n    <a className=\"navbar-brand\" href=\"#\">\r\n        Navbar <span className=\"badge badge-pill badge-secondary\">\r\n            {totalCounters}\r\n            </span>\r\n        </a>\r\n</nav>);\r\n    };\r\n \r\nexport default navBar;","import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n    //Runs when dom updates used to get make calls of new data from servers if update happened\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log('prevProps', prevProps);\r\n        console.log('prevState', prevState);\r\n        if(prevProps.counter.value !== this.props.counter.value){\r\n            //Ajax call to get new data from server\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        console.log('Counter- Unmount');\r\n    }\r\n\r\n\r\n    /* this feature creates an instance for every counter \r\n    constructor(){\r\n        super();\r\n     this.handleIncrement= this.handleIncrement.bind(this);\r\n    }*/\r\n//this feature may break or be unavailable soon\r\n\r\n    \r\n\r\n \r\n    render() {\r\n        //shows the objects that are rendered with their properties\r\n        //console.log(this.props);\r\n        console.log('counter- rendered');  \r\n        return( \r\n            <div>\r\n            {this.props.children}\r\n            <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n            <button\r\n            onClick={() =>{this.props.onIncrement(this.props.counter) }\r\n    }\r\n            className=\"btn btn-secondary btn-sm\">\r\n                Increment\r\n                </button>\r\n                <button onClick={() => this.props.onDelete(this.props.counter.id)} className=\"btn btn-danger btn-sm m-2\">Delete</button>\r\n            </div>\r\n        );\r\n\r\n        \r\n    }\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 badge-\";\r\n        classes += (this.props.counter.value === 0) ? \"warning\" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount(){\r\n        const {value: count} = this.props.counter;\r\n        return count ===0? 'Zero': count;\r\n    };\r\n}\r\n \r\nexport default Counter;","import React, { Component } from 'react';\r\nimport Counter from './counter';\r\n\r\n\r\nclass Counters  extends Component {\r\n    \r\n    render() {\r\n        const {onReset, counters, onDelete, onIncrement}  = this.props;\r\n        console.log('counters- rendered ')\r\n        \r\n        return ( \r\n        <div>\r\n            <button\r\n            onClick={onReset} \r\n            className=\"btn btn-primary btm-sm m-2\">\r\n                Reset\r\n            </button>\r\n        {counters.map(counter => \r\n        <Counter\r\n        key={counter.id} \r\n        onDelete={onDelete}\r\n        onIncrement={onIncrement} \r\n        counter={counter}\r\n        />\r\n        \r\n        )}\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default Counters ;\r\n\r\n ","import React, {Component} from 'react';\nimport NavBar from './components/navbar';\nimport './App.css';\nimport Counters from './components/counters';\n\n\n\nclass App extends Component {\n\n  state = {\n    counters:[\n        {id: 1, value: 4},\n        {id: 2, value: 0},\n        {id: 3, value: 0},\n        {id: 4, value: 0},\n    ]\n  }\n  //used to construct the app\n  constructor(props){\n    super(props);\n    console.log('App - Constructor')\n  }\n  //Mounting means is when all the objects are in the dom\n  componentDidMount() {\n    //ajax call\n    console.log('App- Mounted')\n  }\n  handleIncrement = counter =>{\n  const counters = [...this.state.counters];\n  let index=counters.indexOf(counter);\n  counters[index]={ ...counter };\n  counters[index].value++;\n  //used to update the app all rerender the app it gets a react element in viritual dom then compares it to dom and updates the difference\n  this.setState({counters});\n  \n  }\n  handleReset=()=>{\n  const counters= this.state.counters.map(c => {\n      c.value =0;\n      return c;\n  });\n  this.setState({counters});\n  };\n  \n  handleDelete = counterId =>{\n      const counters= this.state.counters.filter(c => c.id !== counterId);\n      this.setState({counters});\n  };\n  render() { \n    console.log('App - Rendered');\n    return (\n      <React.Fragment>\n      <NavBar totalCounters={this.state.counters.filter(c=>c.value>0).length} />\n      <main className=\"container\">\n        <Counters\n        counters={this.state.counters} \n        onReset={this.handleReset} \n        onIncrement={this.handleIncrement} \n        onDelete={this.handleDelete}/> \n      </main>\n      </React.Fragment>\n    );\n  }\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));\nreportWebVitals();"],"sourceRoot":""}